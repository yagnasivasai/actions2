name: create a comment on a new issues.


on:
  issues: 
    types: [opened]

jobs:
  comment-with-action:   ## Job name
    runs-on: ubuntu-latest  ## default runners are ubuntu and windows
    steps:
      - name: github dump
        run: echo ' ${{ toJSON(github.event) }}' | jq
        shell: bash
      - name: Create comment
        uses: peter-evans/create-or-update-comment@v1
        with:
          issue-number: ${{ github.event.issue.number }}
          body: |
            This is a multi-line test comment
            - With GitHub **Markdown** :sparkles:
            - Created by [create-or-update-comment][1]
          reactions: '+1'
  comment-with-api-by-curl:  ## Job name
    runs-on: ubuntu-latest
    needs: comment-with-action ## so we basically disabling parallel execution with this which comes by default
    steps:
      - name: comment with api by curl
        run: |
          curl --request POST \
          --url https://api.github.com/repos/${ORGANIZATION}/${REPOSITORY}/issues/${ISSUE_NUMBER}/comments \
          --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
          --header 'content-type: application/json' \
          --data '{
            "title": "Automated issue for commit: ${{ github.sha }}",
            "body": "Comment but from the API call not action **${{ github.workflow }}**. \n\n The commit hash was: _${{ github.sha }}_."
            }' \
          --fail
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ORGANIZATION: ${{ github.event.issue.user.login }}
          REPOSITORY: ${{ github.event.repository.name }}
          ISSUE_NUMBER: ${{ github.event.issue.number }}
  comment-with-api-by-gh:
    runs-on: ubuntu-latest
    needs: comment-with-api-by-curl
    steps:
      - name: comment with api by gh
        run: |
          gh api -X POST \
            https://api.github.com/repos/${ORGANIZATION}/${REPOSITORY}/issues/${ISSUE_NUMBER}/comments \
            -f body='
            Comment but from the API call not action
            '
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ORGANIZATION: ${{ github.event.issue.user.login }}
          REPOSITORY: ${{ github.event.repository.name }}
          ISSUE_NUMBER: ${{ github.event.issue.number }}
        